{"pageProps":{"note":{"id":"nz23kt8zcx99qr9ei3td0kg","title":"Component Data Flow","desc":"","updated":1687529154874,"created":1687527334673,"custom":{},"fname":"web-components.hierarchy-and-architecture.component-data-flow","type":"note","vault":{"fsPath":".","selfContained":true,"name":"docs"},"contentHash":"ad2162d36fbdc15f45548829cdfd1965","links":[{"type":"wiki","from":{"fname":"web-components.hierarchy-and-architecture.component-data-flow","id":"nz23kt8zcx99qr9ei3td0kg","vaultName":"docs"},"value":"web-components.communication.js-properties","alias":"Custom Properties","position":{"start":{"line":4,"column":126,"offset":421},"end":{"line":4,"column":190,"offset":485},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"web-components.communication.js-properties"}},{"type":"wiki","from":{"fname":"web-components.hierarchy-and-architecture.component-data-flow","id":"nz23kt8zcx99qr9ei3td0kg","vaultName":"docs"},"value":"web-components.communication.events","alias":"Custom Event","position":{"start":{"line":6,"column":144,"offset":799},"end":{"line":6,"column":196,"offset":851},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"web-components.communication.events"}},{"from":{"fname":"web-components.hierarchy-and-architecture","id":"a3xw0se9vtlbizvaguc85sw","vaultName":"docs"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":336},"end":{"line":8,"column":68,"offset":401},"indent":[]},"value":"web-components.hierarchy-and-architecture.component-data-flow"}],"anchors":{},"children":[],"parent":"a3xw0se9vtlbizvaguc85sw","data":{}},"body":"<h1 id=\"component-data-flow\">Component Data Flow<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#component-data-flow\"></a></h1>\n<p>Cuando utilizamos componentes queremos mantenerlos genéricos y reutilizables. Para lograr esto debemos separar la lógica de fetching de datos del componente y recibir estos últimos por medio de custom properties. El flujo de datos de nuestra aplicación sería algo así:\n<img src=\"/image-25.png\" alt=\"Alt text\">\nHacemos el fetch desde el main de nuestra aplicación <code>index.js</code>, después pasamos esa data a nuestros componentes por las <a href=\"/notes/6ru1efirtn5teux1y43551d\">Custom Properties</a>. Esta propiedada va a tener el arreglo de personajes, y esto mantiene nuestro componente de lista generico y reutilizable ya que no le importa la data que va a recibir.</p>\n<p>Nuestro componente de lista también necesita comunicarse con el main para avisarle que se ha clickeado sobre un item, para eso utilizaremos un <a href=\"/notes/h8e4ccyda8x2xn10jqv3qb2\">Custom Event</a> para indicarle al root cual fue el item seleccionado y que el pueda pasarle la data al componente de detalle.</p>\n<p>Como el de lista, a nuestro componente de detalle no le importa de donde viene la data, su unica responsabilidad es renderizarla. La idea de este patron utilizado por los principales frameworks ( Angular, Vue y React), es que la mayoría de nuestros componentes sean puros, es decir, <strong>que su única responsabilidad sea renderizar algo</strong>. De esta manera separamos la lógica de la renderización. Esto hace que los componentes puros sean reutilizables y más fáciles de testear con unit testing. </p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&#x3C;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>h2</span><span class=\"token punctuation\">></span></span>Personajes de la Galaxia<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>h2</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>x-character-list</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>x-character-list</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>x-character-detail</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>x-character-detail</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//index.js</span>\n<span class=\"token keyword module\">import</span> <span class=\"token string\">'./x-character-detail.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token string\">'./x-character-list.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> characterListComponent <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x-character-list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> characterDetailComponent <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x-character-detail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncharacterListComponent<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'characterSelected'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  characterDetailComponent<span class=\"token punctuation\">.</span><span class=\"token property-access\">character</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">detail</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://swapi.dev/api/people/'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token arrow operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    characterListComponent<span class=\"token punctuation\">.</span><span class=\"token property-access\">characters</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token property-access\">results</span><span class=\"token punctuation\">;</span>\n    characterDetailComponent<span class=\"token punctuation\">.</span><span class=\"token property-access\">character</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token property-access\">results</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>En nuestro <code>index.js</code> tomamos las referencias DOM de nuestros componentes. Agregamos el <code>eventListener</code> para nuestro evento de la lista de componentes y cuando este se dispara, pasamos el <code>detail</code> del evento (donde vendra nuestro item) a nuestro componente de detalle.</p>\n<p>También hacemos la petición a la API para pasarle la lista de persojanes a nuestro componente lista por medio de la propiedad characters. También le damos un personaje inicial a nuestro componente de detalle.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// x-character-list.js</span>\n<span class=\"token keyword\">const</span> template  <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'template'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntemplate<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token html language-html\">\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n    <span class=\"token selector\">button</span><span class=\"token punctuation\">{</span>\n      <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>style</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>section</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>section</span><span class=\"token punctuation\">></span></span>\n</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">XCharacterList</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">characters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_characters</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">characters</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_characters</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">_render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">shadowRoot</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">appendChild</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span><span class=\"token property-access\">content</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">cloneNode</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">characterListElement</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">shadowRoot</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'section'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">_render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">characterListElement</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">characters</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">character</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      button<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerText</span> <span class=\"token operator\">=</span> character<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">;</span>\n      button<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'characterSelected'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span> character <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">characterListElement</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">appendChild</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x-character-list'</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">XCharacterList</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>En nuestra template definimos estilos para los botones y una seccion donde agregaremos los botones de nuestros personajes.\nEn la definición de la clase agregamos la custom property <code>characters</code>. Tenemos sus respectivos setters y getters. El constructor hace el mismo boilerplate que venimos haciendo en nuestros otros ejemplos. Creamos una referencia a la sección que utilizaremos en el método <code>_render()</code> para agregar los personajes. Este método es llamado cada vez que se actualizan los personajes con el <code>set</code>.\nDentro del render creamos el custom event para cada botón y despachamos <code>characterSelected</code>. En otra sección hablamos de mejores opciones para manipular las templates ya que vemos que puede volverse algo muy difícil de mantener, con ayuda podremos crear templates más dinamicas y eventos de manera más sencilla.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//x-character-detail.js</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">XCharacterDetail</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">character</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_character</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">character</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_character</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">_render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">_render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">shadowRoot</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token html language-html\">\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">character</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>h2</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>ul</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>li</span><span class=\"token punctuation\">></span></span>Height: <span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">character</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">height</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>li</span><span class=\"token punctuation\">></span></span>Mass: <span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">character</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">mass</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>li</span><span class=\"token punctuation\">></span></span>Birth Year: <span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">character</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">birth_year</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>ul</span><span class=\"token punctuation\">></span></span>\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x-character-detail'</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">XCharacterDetail</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>En este ejemplo estamos creando la template en el método render en vez de definirla al principio. Como este componente no debe despachar ningun evento la template es más compacta y legible.</p>\n<p>La idea de componentes puros es un patrón común entre los distintos frameworks basados en componentes. Esto es particularmente <strong>importante</strong> en los Web Components ya que es probable que ellos se vayan a mezclar mucha veces con frameworks más cerrados. Mantener los componentes genericos y puros va a ser que la integración de los componentes en otras aplicaciones sea más sencilla.</p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/a3xw0se9vtlbizvaguc85sw\">Hierarchy and Architecture</a></li>\n</ul>","noteIndex":{"id":"guomymvu5xxkrbvedoncjdw","title":"Root","desc":"","updated":1687553787663,"created":1687478467553,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"docs"},"contentHash":"cb6d2289d9babdad43709e4ff265bef2","links":[{"type":"wiki","from":{"fname":"root","id":"guomymvu5xxkrbvedoncjdw","vaultName":"docs"},"value":"https://webcomponent.dev/","alias":"Cory Rylan","position":{"start":{"line":4,"column":94,"offset":117},"end":{"line":4,"column":134,"offset":157},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"https://webcomponent.dev/"}}],"anchors":{"web-components-docs":{"type":"header","text":"Web Components DOCS","value":"web-components-docs","line":8,"column":0,"depth":1}},"children":["zkfccjgcs7b7pqvirwby57p"],"parent":null,"data":{},"body":"\n# Web Components DOCS\n\nEsta es una documentación de web components basada en el libro *Web Component Essentials* de [[Cory Rylan|https://webcomponent.dev/]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"docs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"localhost:3000","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}